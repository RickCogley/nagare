// ==================================================================
// config.ts - Configuration Schema and Defaults
// ==================================================================

/**
 * Supported template formats
 */
export enum TemplateFormat {
  TYPESCRIPT = 'typescript',
  JSON = 'json',
  YAML = 'yaml',
  CUSTOM = 'custom'
}

/**
 * Bump types for version increments
 */
export enum BumpType {
  MAJOR = 'major',
  MINOR = 'minor',
  PATCH = 'patch'
}

/**
 * Log levels
 */
export enum LogLevel {
  DEBUG = 0,
  INFO = 1,
  WARN = 2,
  ERROR = 3
}

/**
 * Default commit type mappings following conventional commits
 */
export const DEFAULT_COMMIT_TYPES: CommitTypeMapping = {
  feat: 'added',
  fix: 'fixed',
  docs: 'changed',
  style: 'changed',
  refactor: 'changed',
  perf: 'changed',
  test: 'changed',
  build: 'changed',
  ci: 'changed',
  chore: 'changed',
  revert: 'changed',
  security: 'security'
};

/**
 * Default configuration
 */
export const DEFAULT_CONFIG: Partial<NagareConfig> = {
  versionFile: {
    path: './version.ts',
    template: TemplateFormat.TYPESCRIPT
  },
  releaseNotes: {
    includeCommitHashes: true,
    maxDescriptionLength: 100
  },
  github: {
    createRelease: true,
    tokenEnvVar: 'GITHUB_TOKEN'
  },
  commitTypes: DEFAULT_COMMIT_TYPES,
  options: {
    dryRun: false,
    skipConfirmation: false,
    gitRemote: 'origin',
    tagPrefix: 'v',
    logLevel: LogLevel.INFO
  },
  docs: {
    enabled: false,
    outputDir: './docs',
    includePrivate: false
  }
};

// ============================================================================
// Built-in Templates
// ============================================================================

/**
 * TypeScript version file template
 */
export const TYPESCRIPT_TEMPLATE = `/**
 * Version information for {{project.name}}
 * Generated by Nagare on {{buildDate}}
 */

export const VERSION = "{{version}}";

export const BUILD_INFO = {
  buildDate: "{{buildDate}}",
  gitCommit: "{{gitCommit}}",
  buildEnvironment: "{{environment}}"
} as const;

export const APP_INFO = {
  name: "{{project.name}}",
  description: "{{project.description}}",
  repository: "{{project.repository}}",
  license: "{{project.license}}"
} as const;

{{#if metadata}}
export const APP_METADATA = {{metadata}} as const;
{{/if}}

export const RELEASE_NOTES = {{releaseNotes}} as const;
`;

/**
 * JSON version file template
 */
export const JSON_TEMPLATE = `{
  "version": "{{version}}",
  "buildInfo": {
    "buildDate": "{{buildDate}}",
    "gitCommit": "{{gitCommit}}",
    "buildEnvironment": "{{environment}}"
  },
  "appInfo": {
    "name": "{{project.name}}",
    "description": "{{project.description}}",
    "repository": "{{project.repository}}",
    "license": "{{project.license}}"
  }{{#if metadata}},
  "metadata": {{metadata}}{{/if}},
  "releaseNotes": {{releaseNotes}}
}`;

/**
 * YAML version file template
 */
export const YAML_TEMPLATE = `version: "{{version}}"
buildInfo:
  buildDate: "{{buildDate}}"
  gitCommit: "{{gitCommit}}"
  buildEnvironment: "{{environment}}"
appInfo:
  name: "{{project.name}}"
  description: "{{project.description}}"
  repository: "{{project.repository}}"
  license: "{{project.license}}"
{{#if metadata}}
metadata: {{metadata}}
{{/if}}
releaseNotes: {{releaseNotes}}
`;

export const BUILT_IN_TEMPLATES = {
  [TemplateFormat.TYPESCRIPT]: TYPESCRIPT_TEMPLATE,
  [TemplateFormat.JSON]: JSON_TEMPLATE,
  [TemplateFormat.YAML]: YAML_TEMPLATE
};